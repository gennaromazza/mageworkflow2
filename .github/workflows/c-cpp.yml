name: Cross-Compile for Windows
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ mingw-w64 qtbase5-dev qtdeclarative5-dev libopencv-dev libboost-all-dev

    - name: Create build directory
      run: mkdir build

    - name: Configure CMake for Windows
      run: |
        cmake -S . -B build \
        -DCMAKE_SYSTEM_NAME=Windows \
        -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
        -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ \
        -DCMAKE_FIND_ROOT_PATH=/usr/x86_64-w64-mingw32 \
        -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
        -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
        -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY

    - name: Build
      run: cmake --build build --config Release

    - name: Package with CPack
      run: |
        cd build
        cpack -G NSIS
        cd ..

    - name: List build directory contents
      run: |
        echo "Build directory contents:"
        ls -la build

    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4
      with:
        name: PhotoWorkflow-Windows-Installer
        path: build/PhotoWorkflow-*-win64.exe
        if-no-files-found: error

    - name: Upload Build Logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: build/
        if-no-files-found: warn

    - name: Upload CMake Configuration
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cmake-config
        path: |
          build/CMakeCache.txt
          build/CMakeFiles/CMakeError.log
          build/CMakeFiles/CMakeOutput.log
        if-no-files-found: warn
